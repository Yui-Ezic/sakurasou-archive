version: "3.8"
services:
    gateway:
        build:
            context: gateway/docker
            dockerfile: development/nginx/Dockerfile
        ports:
            - "8080:8080"
            - "8081:8081"

    frontend:
        build:
            context: frontend/docker/development/nginx

    frontend-node:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

    frontend-node-cli:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend:/app

    api:
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./api:/app

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        volumes:
            - ./api:/app
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            PHP_IDE_CONFIG: serverName=api
            SENTRY_DSN: ''
            S3_KEY_ID: storage_app
            S3_KEY_SECRET: storage_pass
            S3_ENDPOINT: http://api-storage:9000
            S3_BUCKET: default
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD: secret
            DB_NAME: app

    api-php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        volumes:
            - ./api:/app
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            SENTRY_DSN: ''
            S3_KEY_ID: storage_app
            S3_KEY_SECRET: storage_pass
            S3_ENDPOINT: http://api-storage:9000
            S3_BUCKET: default
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD: secret
            DB_NAME: app

    api-storage:
        image: minio/minio
        environment:
            MINIO_ROOT_USER: storage_app
            MINIO_ROOT_PASSWORD: storage_pass
        volumes:
            - storage:/data
        entrypoint: sh -c 'mkdir -p /data/default && docker-entrypoint.sh minio server /data --console-address ":80"'
        ports:
            - "8082:80"

    api-postgres:
        image: postgres:13.3-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

volumes:
    storage:
    api-postgres: